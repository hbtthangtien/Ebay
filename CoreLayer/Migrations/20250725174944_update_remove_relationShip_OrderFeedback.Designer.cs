// <auto-generated />
using System;
using CoreLayer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreLayer.Migrations
{
    [DbContext(typeof(CloneEbayDbContext))]
    [Migration("20250725174944_update_remove_relationShip_OrderFeedback")]
    partial class update_remove_relationShip_OrderFeedback
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreLayer.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("isDefault");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("street");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Address__3213E83F58794D6D");

                    b.HasIndex("UserId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("BidTime")
                        .HasColumnType("datetime")
                        .HasColumnName("bidTime");

                    b.Property<int?>("BidderId")
                        .HasColumnType("int")
                        .HasColumnName("bidderId");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.HasKey("Id")
                        .HasName("PK__Bid__3213E83F51E40AD4");

                    b.HasIndex("BidderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83FFBFAA45E");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("discountPercent");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<int?>("MaxUsage")
                        .HasColumnType("int")
                        .HasColumnName("maxUsage");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("Id")
                        .HasName("PK__Coupon__3213E83F5322616E");

                    b.HasIndex("ProductId");

                    b.ToTable("Coupon", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Dispute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int?>("RaisedBy")
                        .HasColumnType("int")
                        .HasColumnName("raisedBy");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolution");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Dispute__3213E83FC7A98713");

                    b.HasIndex("OrderId");

                    b.HasIndex("RaisedBy");

                    b.ToTable("Dispute", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AverageRating")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("averageRating");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PositiveRate")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("positiveRate");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("sellerId");

                    b.Property<int?>("TotalReviews")
                        .HasColumnType("int")
                        .HasColumnName("totalReviews");

                    b.HasKey("Id")
                        .HasName("PK__Feedback__3213E83F7404CC3B");

                    b.HasIndex("OrdersId");

                    b.HasIndex("SellerId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdated");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__Inventor__3213E83F48B36DEB");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiverId");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("senderId");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp");

                    b.HasKey("Id")
                        .HasName("PK__Message__3213E83F7144CC1A");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("unitPrice");

                    b.HasKey("Id")
                        .HasName("PK__OrderIte__3213E83F7EC2808B");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.OrderTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("addressId");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("buyerId");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalPrice");

                    b.HasKey("Id")
                        .HasName("PK__OrderTab__3213E83F282EE92F");

                    b.HasIndex("AddressId");

                    b.HasIndex("BuyerId");

                    b.ToTable("OrderTable", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<string>("Method")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("method");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime")
                        .HasColumnName("paidAt");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83FC485D7F6");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AuctionEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("auctionEndTime");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("images");

                    b.Property<bool?>("IsAuction")
                        .HasColumnType("bit")
                        .HasColumnName("isAuction");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("sellerId");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83FEFD48A5F");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.ReturnRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__ReturnRe__3213E83FC9454B62");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("ReturnRequest", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int")
                        .HasColumnName("reviewerId");

                    b.HasKey("Id")
                        .HasName("PK__Review__3213E83F0BF301EC");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.ShippingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Carrier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("carrier");

                    b.Property<DateTime?>("EstimatedArrival")
                        .HasColumnType("datetime")
                        .HasColumnName("estimatedArrival");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trackingNumber");

                    b.HasKey("Id")
                        .HasName("PK__Shipping__3213E83FF99F0D65");

                    b.HasIndex("OrderId");

                    b.ToTable("ShippingInfo", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BannerImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bannerImageURL");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("sellerId");

                    b.Property<string>("StoreName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("storeName");

                    b.HasKey("Id")
                        .HasName("PK__Store__3213E83FF102737C");

                    b.HasIndex("SellerId");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("avatarURL");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F0238F3F7");

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E6164741FE703")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CoreLayer.Entities.Address", b =>
                {
                    b.HasOne("CoreLayer.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Address__userId__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreLayer.Entities.Bid", b =>
                {
                    b.HasOne("CoreLayer.Entities.User", "Bidder")
                        .WithMany("Bids")
                        .HasForeignKey("BidderId")
                        .HasConstraintName("FK__Bid__bidderId__5629CD9C");

                    b.HasOne("CoreLayer.Entities.Product", "Product")
                        .WithMany("Bids")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Bid__productId__5535A963");

                    b.Navigation("Bidder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoreLayer.Entities.Coupon", b =>
                {
                    b.HasOne("CoreLayer.Entities.Product", "Product")
                        .WithMany("Coupons")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Coupon__productI__60A75C0F");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoreLayer.Entities.Dispute", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Order")
                        .WithMany("Disputes")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Dispute__orderId__693CA210");

                    b.HasOne("CoreLayer.Entities.User", "RaisedByNavigation")
                        .WithMany("Disputes")
                        .HasForeignKey("RaisedBy")
                        .HasConstraintName("FK__Dispute__raisedB__6A30C649");

                    b.Navigation("Order");

                    b.Navigation("RaisedByNavigation");
                });

            modelBuilder.Entity("CoreLayer.Entities.Feedback", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersId");

                    b.HasOne("CoreLayer.Entities.User", "Seller")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Feedback__seller__66603565");

                    b.Navigation("Orders");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CoreLayer.Entities.Inventory", b =>
                {
                    b.HasOne("CoreLayer.Entities.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Inventory__produ__6383C8BA");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoreLayer.Entities.Message", b =>
                {
                    b.HasOne("CoreLayer.Entities.User", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Message__receive__5DCAEF64");

                    b.HasOne("CoreLayer.Entities.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Message__senderI__5CD6CB2B");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CoreLayer.Entities.OrderItem", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderItem__order__46E78A0C");

                    b.HasOne("CoreLayer.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderItem__produ__47DBAE45");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CoreLayer.Entities.OrderTable", b =>
                {
                    b.HasOne("CoreLayer.Entities.Address", "Address")
                        .WithMany("OrderTables")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__OrderTabl__addre__440B1D61");

                    b.HasOne("CoreLayer.Entities.User", "Buyer")
                        .WithMany("OrderTables")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__OrderTabl__buyer__4316F928");

                    b.Navigation("Address");

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("CoreLayer.Entities.Payment", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payment__orderId__4AB81AF0");

                    b.HasOne("CoreLayer.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payment__userId__4BAC3F29");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreLayer.Entities.Product", b =>
                {
                    b.HasOne("CoreLayer.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Product__categor__3F466844");

                    b.HasOne("CoreLayer.Entities.User", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Product__sellerI__403A8C7D");

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CoreLayer.Entities.ReturnRequest", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Order")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__ReturnReq__order__5165187F");

                    b.HasOne("CoreLayer.Entities.User", "User")
                        .WithMany("ReturnRequests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ReturnReq__userI__52593CB8");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreLayer.Entities.Review", b =>
                {
                    b.HasOne("CoreLayer.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Review__productI__59063A47");

                    b.HasOne("CoreLayer.Entities.User", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .HasConstraintName("FK__Review__reviewer__59FA5E80");

                    b.Navigation("Product");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("CoreLayer.Entities.ShippingInfo", b =>
                {
                    b.HasOne("CoreLayer.Entities.OrderTable", "Order")
                        .WithMany("ShippingInfos")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__ShippingI__order__4E88ABD4");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CoreLayer.Entities.Store", b =>
                {
                    b.HasOne("CoreLayer.Entities.User", "Seller")
                        .WithMany("Stores")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Store__sellerId__6D0D32F4");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CoreLayer.Entities.Address", b =>
                {
                    b.Navigation("OrderTables");
                });

            modelBuilder.Entity("CoreLayer.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CoreLayer.Entities.OrderTable", b =>
                {
                    b.Navigation("Disputes");

                    b.Navigation("OrderItems");

                    b.Navigation("Payments");

                    b.Navigation("ReturnRequests");

                    b.Navigation("ShippingInfos");
                });

            modelBuilder.Entity("CoreLayer.Entities.Product", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Coupons");

                    b.Navigation("Inventories");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CoreLayer.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Bids");

                    b.Navigation("Disputes");

                    b.Navigation("Feedbacks");

                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("OrderTables");

                    b.Navigation("Payments");

                    b.Navigation("Products");

                    b.Navigation("ReturnRequests");

                    b.Navigation("Reviews");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
