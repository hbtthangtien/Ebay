@{
    ViewData["HideChrome"] = true;   // Ẩn navbar + footer
    ViewData["Title"] = "Sign in";
    var returnUrl = (string?)ViewData["ReturnUrl"] ?? "/";
}

<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/login-styles.css" asp-append-version="true" />
<link rel="icon" href="https://pages.ebay.com/favicon.ico" />

<div class="container-sm my-5" style="max-width:420px">
    <h4 class="mb-4 fw-semibold">Sign in to eBay</h4>

    <form class="signin-form needs-validation"
          asp-controller="Authenticate"
          asp-action="Login"
          method="post" novalidate>
        @* -------- BƯỚC 1: EMAIL -------- *@
        <div id="stepEmail">
            <div class="mb-3">
                <label class="form-label">Email or username</label>
                <input type="email" name="email"
                       class="form-control email-input" required />
                <div class="invalid-feedback">Please enter a valid e-mail.</div>
            </div>
            <button type="button" id="btnEmail"
                    class="btn btn-primary w-100 mb-2">
                Continue
            </button>
        </div>

        @* -------- BƯỚC 2: PASSWORD -------- *@
        <div id="stepPassword" class="d-none">
            <div class="mb-3">
                <label class="form-label">Password</label>
                <input type="password" name="password"
                       class="form-control" required />
            </div>

            <input type="hidden" name="email" id="hiddenEmail" />
            <button type="submit" class="btn btn-primary w-100 mb-2">
                Continue
            </button>
        </div>

        @Html.AntiForgeryToken()
        <input type="hidden" name="returnUrl" value="@returnUrl" />

        @* ---------- Hiển thị lỗi đăng nhập ---------- *@
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="text-danger small">
                @foreach (var e in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <div>@e.ErrorMessage</div>
                }
            </div>
        }
    </form>
</div>

@section Scripts {
    <script>
        // Bootstrap validate
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', e => {
                    if (!form.checkValidity()) {
                        e.preventDefault(); e.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();

        // Bước 1 -> Bước 2
        document.getElementById('btnEmail').addEventListener('click', () => {
            const emailInput = document.querySelector('#stepEmail input[name="email"]');
            if (emailInput.checkValidity()) {
                document.getElementById('hiddenEmail').value = emailInput.value;
                document.getElementById('stepEmail').classList.add('d-none');
                document.getElementById('stepPassword').classList.remove('d-none');
            } else {
                emailInput.reportValidity();
            }
        });
    </script>
}
